#!/usr/bin/env bash

set -euo pipefail

# pre-commit hooks:
# check that the pipeline works,
# check linters:
#   python conde: flake8
#   shell: shellcheck
#   yaml: yamllint
#   r: lintr


# Pipeline
do_clean() {
    snakemake --version
    snakemake clean
}

do_pipeline_dry_run() {
    snakemake --version
    snakemake --dryrun --printshellcmds -j
}

do_pipeline() {
    snakemake --version
    snakemake --use-conda -j
}


# Linting
do_pylint_snakefiles() {
    pylint --version

    pylint \
        --disable=syntax-error \
        Snakefile

    find src/snakefiles -type f -name "*.py" -exec  pylint --disable=syntax-error "{}" \;

}

do_pylint_python() {
    pylint --version
    if [ -d src/ ] ; then
        find src/ -name "*.py" -path 'src/snakefiles' -prune -exec pylint {} \;
    fi
}

do_shellcheck(){
    shellcheck --version

    # Check all files with a bash shebang
    grep -rl '^#!/.*bash' src/ .travis/ .travis| xargs shellcheck
}

do_yamllint(){
    yamllint --version

    find . -type f -name "*.yml" -o -name "*.yaml" \
    | grep -v ^"./.snakemake" `# snakemake can generate some` \
    | xargs yamllint --strict
}


# Error
fail () {
    echo "$0: [FAILED]"
    exit 1
}


# Check tree
if git rev-parse --verify HEAD >/dev/null 2>&1
then
        against=HEAD
else
        # Initial commit: diff against an empty tree object
        against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

# Run everything
echo "Cleaning results"
do_clean || fail clean

echo "Checking the pipeline"
do_pipeline_dry_run || fail pipeline_dry_run

echo "Linting Snakefiles"
do_pylint_snakefiles || fail pylint_snakefiles

echo "Linting Python scripts"
do_pylint_python || fail pylint

echo "Linting Shell scripts"
do_shellcheck || fail shellcheck

echo "Linting YAML files"
do_yamllint || fail yamllint

echo "Running the pipeline"
do_pipeline || fail Snakemake

# If there are whitespace errors, print the offending file names and fail.
exec git diff-index --check --cached $against --
